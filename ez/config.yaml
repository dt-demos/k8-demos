apiVersion: v1
kind: Namespace
metadata:
  name: easytravel
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easytravel-mongodb
  namespace: easytravel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: easytravel-mongodb
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: easytravel-mongodb
    spec:
      containers:
      - image: dynatrace/easytravel-mongodb:latest
        imagePullPolicy: "Always"
        name: easytravel-mongodb
        ports:
        - containerPort: 27017
        - containerPort: 28017
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: easytravel-mongodb
  namespace: easytravel
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  - name: "28017"
    port: 28017
    targetPort: 28017
  selector:
    app: easytravel-mongodb
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easytravel-backend
  namespace: easytravel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: easytravel-backend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: easytravel-backend
        app: easytravel-backend
    spec:
      containers:
      - env:
        - name: CATALINA_OPTS
          value: -Dconfig.apmServerDefault=APM -Djava.security.egd=file:/dev/./urandom
        - name: ET_DATABASE_LOCATION
          value: easytravel-mongodb:27017
        - name: ET_MONGO_AUTH_DB
          value: "admin"
        - name: ET_DATABASE_USER
          value: "etAdmin"
        - name: ET_DATABASE_PASSWORD
          value: "adminadmin"
        image: dynatrace/easytravel-backend:latest
        imagePullPolicy: "Always"
        name: easytravel-backend
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 512Mi
        ports:
        - containerPort: 8080
        resources: {}
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /services/JourneyService/getLocations
            port: 8080
            scheme: HTTP
          periodSeconds: 60
          initialDelaySeconds: 240
          successThreshold: 1
          timeoutSeconds: 1  
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: easytravel-backend
  namespace: easytravel
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
    nodePort: 30687
  selector:
    app: easytravel-backend
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easytravel-frontend
  namespace: easytravel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: easytravel-frontend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: easytravel-frontend
    spec:
      containers:
      - env:
        - name: CATALINA_OPTS
          value: -Dconfig.apmServerDefault=APM -Xmx525m -Djava.security.egd=file:/dev/./urandom
        - name: ET_BACKEND_URL
          value: http://easytravel-backend:8080
        image: dynatrace/easytravel-frontend:latest
        imagePullPolicy: "Always"
        name: easytravel-frontend
        ports:
        - containerPort: 8080
        resources: {}
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 60
          initialDelaySeconds: 240
          successThreshold: 1
          timeoutSeconds: 1
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: easytravel-frontend
  namespace: easytravel
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    app: easytravel-frontend
  type: LoadBalancer
status:
  loadBalancer: {}
